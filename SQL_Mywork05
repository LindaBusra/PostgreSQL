
-- ===================== CONSTRAINTS - KISITLAMALAR ======================================
/*           
    NOT NULL	- Bir Sutunun  NULL içermemesini, yani boş olmamasını sağlar.
    UNIQUE		- Bir sutundaki tüm değerlerin BENZERSİZ yani tek olmasını sağlar.  
    PRIMARY KEY	- Bir sutunun NULL içermemesini ve sütundaki verilerin
                  BENZERSIZ olmasını sağlar. (NOT NULL ve UNIQUE)
    FOREIGN KEY	- Başka bir tablodaki Primary Key’i referans göstermek için kullanılır.
                  Böylelikle, tablolar arasında ilişki kurulmuş olur.
                  foreign ve primary ile tablolar birbirine bağlamadan da, id leri ayni olan 
                  satirlarda işlem yap diyebiliriz, böylelikle
                  ayni field verilebilir, parent child ilişkisi olmamiş olur
-- ========================================================================================*/
use test ;
 



CREATE TABLE calisanlar
(
id CHAR(5) PRIMARY KEY, -- not null + unique
isim VARCHAR(50) UNIQUE,
maas int NOT NULL,
ise_baslama DATE
);

INSERT INTO calisanlar VALUES('10002', 'Terje Ringen' ,12000, '2018-04-14');
INSERT INTO calisanlar VALUES('10003', 'Ole Ringen', 5000, '2018-04-14');
INSERT INTO calisanlar VALUES('10004', 'Henne Jacobsen', 5000, '2018-04-14');
INSERT INTO calisanlar VALUES('10005', 'Saly Heidsom', 5000, '2018-04-14'); -- UNiQUE 2. ve daha fazla null engel değil
INSERT INTO calisanlar VALUES('10006', 'Margrethe Solbeck', 5000, '2018-04-14');
INSERT INTO calisanlar VALUES('10007', 'Rebecca Saly', 5000, '2018-04-14');
INSERT INTO calisanlar VALUES('10008', 'Einar Gunhild', 8500, '2019-04-12'); -- MAAS NULL OLAMAZ
INSERT INTO calisanlar VALUES('10009', 'Maria Tuana', 5000, '2018-04-14');
INSERT INTO calisanlar VALUES('10010', 'Jan Vidar', 5000, '2018-04-14'); -- UNiQUE
INSERT INTO calisanlar VALUES('10011', 'Amailie Solheim', 8200, '2018-04-14');
INSERT INTO calisanlar VALUES('10012', 'Ose Trulback', 2000, '2018-04-14');
INSERT INTO calisanlar VALUES('10013', 'Denis Berg', 2000, '2018-04-14');
INSERT INTO calisanlar VALUES('10014', 'Elisa Berg', 6000, '2018-04-14');
INSERT INTO calisanlar VALUES('10015', 'Sunne Ylyborg' ,12000, '2018-04-14');
INSERT INTO calisanlar VALUES('10016', 'Susanne Roth' ,12000, '2018-04-14');
     
select * from calisanlar;
     
     
-- KISITLAMALAR (  FOREIGN KEY)
     
CREATE TABLE adresler
(
adres_id CHAR(5),    
sokak VARCHAR(50),
cadde VARCHAR(30),
sehir VARCHAR(15),
CONSTRAINT id_clsnlr FOREIGN KEY(adres_id) REFERENCES calisanlar(id)
-- adresler tablosundaki adres_id ile calisanlar tablosundaki id leri
-- id_clsnlr isminde foreign key ile birbirine bağladik.
);
   
INSERT INTO adresler VALUES('10003','Mutlu Sok', '40.Cad.','IST');
INSERT INTO adresler VALUES('10003','Can Sok', '50.Cad.','Ankara');
INSERT INTO adresler VALUES('10002','Ağa Sok', '30.Cad.','Antep');


select * from adresler;


--ortak kolonla tablo birlestirmek
select isim, maas from calisanlar, adresler
where calisanlar.id=adresler.adres_id;


-- parent tabloda olmayan id ile child a ekleme yapamayiz  -->Key (adres_id)=(10025) is not present in table "calisanlar".
INSERT INTO adresler VALUES('10025','Ağa Sok', '30.Cad.','Antep');
INSERT INTO adresler VALUES('10026','Ağa Sok', '30.Cad.','Antep');  
  
  
-- FK'ye null değeri atanabilir.
INSERT INTO adresler VALUES(NULL,'Ağa Sok', '30.Cad.','Antep');
INSERT INTO adresler VALUES(NULL,'Ağa Sok', '30.Cad.','Maraş');

select * from adresler;

select * from calisanlar;

SELECT * FROM calisanlar, adresler WHERE calisanlar.id = adresler.adres_id;


   
-- FK'ye null değeri atanabilir.
INSERT INTO adresler VALUES(NULL,'Ağa Sok', '30.Cad.','Antep');
INSERT INTO adresler VALUES(NULL,'Ağa Sok', '30.Cad.','Maraş');



drop table calisanlar;
-- calisanlar tablosunu silmeyecek çünkü
-- CONSTRAINT id_clsnlr FOREIGN KEY(adres_id) REFERENCES calisanlar(id)
-- komutu ile calişanların idleri ile adres id leri birbirine bağladık.
-- bağlanti tablolarda child silinmeden parent silinmez

drop table adresler;
-- adresler table silebiliyoruz.
-- child table silindikten sonra parent table da silinebilir.

delete from calisanlar where id = 10002; -- parent
-- bağlantı olduğu için silemiyoruz.
     
delete from adresler where adres_id= 10002; -- child
     



--  ============================= SUBQUERIES ====================================
--  SORGU içinde çalişan SORGUYA SUBQUERY (ALT SORGU) denilir.

--use test;

drop table calisanlar;

CREATE TABLE calisanlar 
(
id int, 
isim VARCHAR(50), 
sehir VARCHAR(50), 
maas int, 
isyeri VARCHAR(20)
);


INSERT INTO calisanlar VALUES(123456789, 'Ali Seker', 'Istanbul', 2500, 'Vakko');
INSERT INTO calisanlar VALUES(234567890, 'Ayse Gul', 'Istanbul', 1500, 'LCWaikiki');
INSERT INTO calisanlar VALUES(345678901, 'Veli Yilmaz', 'Ankara', 3000, 'Vakko');
INSERT INTO calisanlar VALUES(456789012, 'Veli Yilmaz', 'Izmir', 1000, 'Pierre Cardin');
INSERT INTO calisanlar VALUES(567890123, 'Veli Yilmaz', 'Ankara', 7000, 'Adidas');
INSERT INTO calisanlar VALUES(456789012, 'Ayse Gul', 'Ankara', 1500, 'Pierre Cardin');
INSERT INTO calisanlar VALUES(123456710, 'Fatma Yasa', 'Bursa', 2500, 'Vakko');
    
CREATE TABLE markalar
(
marka_id int, 
marka_isim VARCHAR(20), 
calisan_sayisi int
);
    
INSERT INTO markalar VALUES(100, 'Vakko', 12000);
INSERT INTO markalar VALUES(101, 'Pierre Cardin', 18000);
INSERT INTO markalar VALUES(102, 'Adidas', 10000);
INSERT INTO markalar VALUES(103, 'LCWaikiki', 21000);
    
select * from calisanlar;
select * from markalar;



----from videos B36   3.Session SQL2---------------------------

--1.way : Create table from scratch
CREATE TABLE students(
student_id CHAR(3),
student_name VARCHAR(50),
student_age NUMERIC(2),
student_dob DATE

);


--2.way : Create table by using another table
CREATE TABLE student_name_age
AS SELECT student_name, student_age
FROM students;


--to show table
SELECT*FROM students;
SELECT*FROM student_name_age

--while we create a table, we can put some "constraints" (conditions) for fields. If you put some conditions
--they are constraints. 


--CONSTRAINTS:
--1)UNIQUE
--2)NOT NULL
--3)PRIMARY KEY:There are 2 ways to create primary key.
--4)FOREIGN KEY
--5)CHECK



--1.way to create Primary Key:

CREATE TABLE students(
student_id CHAR(3) PRIMARY KEY, --student_id can not have repeated date, can not have null value, because it is Primary key. 
student_name VARCHAR(50) NOT NULL,  --student_name will not have NULL as data
student_age NUMERIC(2), 	
student_dob DATE UNIQUE --student_dob is unique key, data different from null must be unique, you can have multiple null

);


--2.way to create Primary Key:We can put name for our primary key "student_id_pk" in this way. Then prefer to use.

CREATE TABLE students(
student_id CHAR(3), 
student_name VARCHAR(50),
student_age NUMERIC(2), 	
student_dob DATE,
CONSTRAINT student_id_pk PRIMARY KEY(student_id)	--It puts a name som default but it is difficult to read it.
);


--How to add Foreign Key Constraint

CREATE TABLE parents(
student_id CHAR(3), 
parent_name VARCHAR(50),
phone_number CHAR(10),
CONSTRAINT student_id_pk PRIMARY KEY(student_id)	

);


CREATE TABLE students(
student_id CHAR(3) PRIMARY KEY,  
student_name VARCHAR(50) NOT NULL,  
student_age NUMERIC(2), 	
student_dob DATE UNIQUE,
CONSTRAINT student_id_fk FOREIGN KEY(student_id) REFERENCES parents (student_id )  
--we need primary key, parent table, to create foreign key.
);





--How to add 'Check' constraint

CREATE TABLE students(
student_id CHAR(3), 
student_name VARCHAR(50),
student_age NUMERIC(2), 	
student_dob DATE,
CONSTRAINT student_age_check CHECK(student_age between 0 and 30), --it puts a default name. we can put our name as well. 
CONSTRAINT student_name_upper_case CHECK(student_name=upper(student_name))
);



drop table students;  	--delete table
drop table parents;
delete from students;	--delete data from table


--How to insert data in a table

CREATE TABLE students(
student_id CHAR(3) PRIMARY KEY, 
student_name VARCHAR(50) UNIQUE,
student_age NUMERIC(2) NOT NULL,	
student_dob DATE,
CONSTRAINT student_age_check CHECK(student_age between 0 and 30), --it puts a default name. we can put our name as well. 0 nd 30 are included
CONSTRAINT student_name_upper_case CHECK(student_name=upper(student_name))
);


--1.way insert data for all fields

INSERT INTO students VALUES('101', 'ALI CAN', 13, '10-Aug-2021');
INSERT INTO students VALUES('102', 'VELI HAN', 14, '10-Aug-2007');
--for CHAR we use single quotes but if you do not use it works as well 
INSERT INTO students VALUES(103, 'AYSE TAN', 14, '08-Aug-2007');
INSERT INTO students VALUES(104, 'KEMAL KUZU', 15, null);
--for VARCHAR we have to use single quotes.
INSERT INTO students VALUES('105', 'TOM HANKS', 25, '12-Sep-1996');
INSERT INTO students VALUES('106', 'ANGELIA JULIE', 30, '12-Sep-1996');
INSERT INTO students VALUES('107', 'BRAD PITT', 0, '10-Aug-2021');


select*from students;  -->DQL


--2.way : How to insert data for specific fields
INSERT INTO students(student_id, student_age) VALUES('108', 17);
--INSERT INTO students(student_name, student_age) VALUES('John Walker', 17);  --it does not work, no id!
--INSERT INTO students(student_id, student_name) VALUES('John Walker', 109); --it does not work, order!
--INSERT INTO students(student_name, student_id) VALUES('John Walker', 109); --does not work, we need age!
INSERT INTO students(student_name, student_id, student_age) VALUES('JOHN WALKER', '109', 24);


--How to update existing data?   -->find table-->row-->cell
UPDATE students
SET student_name = 'LEO OCEAN'
WHERE student_id='108';


--Update the dob of John Walker to 11-Dec-1997
UPDATE students
set student_dob='11-Dec-1997'
where student_id='109';


--How to update multiple cell
--Update the dob of 105 to 11-Apr-1996 and name to TOM HANKS
UPDATE students
SET student_dob='11-Apr-1996', student_name = 'TOM HANKS'
WHERE student_id='105';

--How to update multiple records
--Make the dob of all students 01-Aug-2021 if their ids are less than 106

UPDATE students
SET student_dob = '01-Aug-2021'
WHERE student_id<'106';


--Update all the students age to the max age
UPDATE students
SET student_age =(SELECT MAX(student_age) from students);


--Update all the students dob to the min dob
UPDATE students
SET student_dob =(SELECT MIN(student_dob) from students);

select*from students;



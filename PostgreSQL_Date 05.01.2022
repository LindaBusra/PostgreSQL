CREATE TABLE companies
(
  company_id CHAR(9),
  company VARCHAR(20),
  number_of_employees SMALLINT
);

INSERT INTO companies VALUES(100, 'IBM', 12000);
INSERT INTO companies VALUES(101, 'GOOGLE', 18000);
INSERT INTO companies VALUES(102, 'MICROSOFT', 10000);
INSERT INTO companies VALUES(103, 'APPLE', 21000);

CREATE TABLE employees
(
  id CHAR(9),
  name VARCHAR(50),
  state VARCHAR(50),
  salary SMALLINT,
  company VARCHAR(20)
);

INSERT INTO employees VALUES(123456789, 'John Walker', 'Florida', 2500, 'IBM');
INSERT INTO employees VALUES(234567890, 'Brad Pitt', 'Florida', 1500, 'APPLE');
INSERT INTO employees VALUES(345678901, 'Eddie Murphy', 'Texas', 3000, 'IBM');
INSERT INTO employees VALUES(456789012, 'Eddie Murphy', 'Virginia', 1000, 'GOOGLE');
INSERT INTO employees VALUES(567890123, 'Eddie Murphy', 'Texas', 7000, 'MICROSOFT');
INSERT INTO employees VALUES(456789012, 'Brad Pitt', 'Texas', 1500, 'GOOGLE');
INSERT INTO employees VALUES(123456710, 'Mark Stone', 'Pennsylvania', 2500, 'IBM');


--Find the company name, number of employees and average salary for every company

SELECT company, number_of_employees, 
(SELECT AVG (salary) FROM employees WHERE companies.company=employees.company) AS avg_salary_for_company
FROM companies; 

select* from companies, employees where companies.company=employees.company;

--Find the name of the companies and company_ids, maximum and minimum salaries per company

SELECT company, company_id, 
(SELECT MAX (salary) FROM employees WHERE companies.company=employees.company) AS max_salary, 
(SELECT MIN (salary) FROM employees WHERE companies.company=employees.company) AS min_salary
FROM companies;


--Wildcards is used to handle multiply string queries.

--1)% WildCard: It represents zero or more characters.
--LIKE Condition:It is used with wildcard


--select employee names which start with 'E'

select name from employees
where name like 'E%'


--select employee names which ends with 'e'
select name from employees
where name like '%e';

--select employee names which start with 'E' and ends with 'e'
select name from employees
where name like 'B%t';

--select employee names which has 'a' in any position
select name from employees
where name like '%a%';

--select employee names which has not 'a' in any position
select name from employees
where name  not like '%a%';

--select employee names which has not 'e'and 'i' in any position
select name from employees
where name like '%e%r%' OR name LIKE '%r%e%'

--select employee names which has not 'a' or 'i' in any position
select name from employees
where 
REGEXP_LIKE(name, 'e|i') 

--2) -WildCard: It represents a single character.

--Select state names whose second character is 'e' and forth character is 'n'
select state from employees where state like '_e_n%';


--Select state names whose last second character is 'i'
select state from employees where state like '%i_';


--Select states whose second character is 'e' and it has at least 6 characters
select state from employees where state like '_e____%';


--select states which has "i" in any position after second character
select state from employees where state like '__%i%';

--RECEXP_LIKE Condition:You can use Regular Expressions with REGEXP_LIKE


CREATE TABLE words
(
word_id SMALLINT UNIQUE,
word varchar(50) NOT NULL,
number_of_letters SMALLINT
);

INSERT INTO words VALUES (1001, 'hot', 3);
INSERT INTO words VALUES (1002, 'hat', 3);
INSERT INTO words VALUES (1003, 'hit', 3);
INSERT INTO words VALUES (1004, 'hbt', 3);
INSERT INTO words VALUES (1008, 'hct', 3);
INSERT INTO words VALUES (1005, 'adem', 4);
INSERT INTO words VALUES (1006, 'selena', 6);
INSERT INTO words VALUES (1007, 'yusuf', 5);
SELECT * FROM words;

--Select words whose first character is 'h' last character is 't' and second character
--is 'o' or 'a' or 'i'

--1.way
SELECT word
FROM words
WHERE word LIKE 'hot' OR word LIKE 'hat' OR word LIKE 'hit';


--2.way: By using REGEXP_LIKE
SELECT word
FROM words
WHERE REGEXP_LIKE (word, 'h[oai]t')


--Select words whose first character is h, and last character is 't'
and second character is from 'a' to 'e'

SELECT word
FROM words
WHERE REGEXP_LIKE (word, 'h[a-e]t')    --[a-e]  means that a,b,c,d,e


--Select words whose first character is 's' or 'a' or 'y'

SELECT word
FROM words
WHERE REGEXP_LIKE (word, '^s|^a|^y')

--or
SELECT word
FROM words
WHERE REGEXP_LIKE (word, '^[say]')

select*from words
--delete-->you delete hole data, you can get the date back
--when you use truncked table, you can not return back data
--drope table-->delete data ? 


